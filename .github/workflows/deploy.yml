name: Deploy Minecraft Server

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: server-mine-463823
  GCP_ZONE: southamerica-east1-a
  INSTANCE_NAME: minecraft-server-host
  REMOTE_DIR: /mnt/data/minecraft

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/616016810024/locations/global/workloadIdentityPools/github-pool-7lqy/providers/github-provider'
        service_account: 'sa-minecraft-vm@server-mine-463823.iam.gserviceaccount.com'

    # ⚠️ Debug opcional para validar o token (pode remover se quiser)
    - name: Debug token claims
      run: echo "${{ steps.auth.outputs.access_token }}" | cut -d '.' -f2 | base64 -d | jq

    - name: Install NumPy to improve IAP tunnel performance
      run: python -m pip install numpy

    - name: Copy docker-compose.yml to VM
      run: |
        echo "Copying docker-compose.yml to VM via IAP tunnel..."
        gcloud compute scp \
          terraform/docker-compose.yml \
          ${{ env.INSTANCE_NAME }}:~ \
          --project=${{ env.GCP_PROJECT_ID }} \
          --zone=${{ env.GCP_ZONE }} \
          --tunnel-through-iap

    - name: Stop, Clean, and Restart Service on VM
      run: |
        echo "Stopping old containers and restarting with new config..."
        gcloud compute ssh ${{ env.INSTANCE_NAME }} \
          --zone ${{ env.GCP_ZONE }} \
          --project=${{ env.GCP_PROJECT_ID }} \
          --tunnel-through-iap -- \
          "sudo mkdir -p /mnt/data/minecraft && \
           cd /mnt/data/minecraft || true && \
           sudo docker compose down && \
           sudo docker rm -f mc-sobrevivencia velocity-proxy || true && \
           sudo mv ~/docker-compose.yml /mnt/data/minecraft/ && \
           echo 'Starting new service...' && \
           sudo docker compose up -d"
