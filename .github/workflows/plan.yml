name: Terraform Plan & Validate

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/plan.yml'

jobs:
  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Autenticação com Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account:            ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ secrets.GCS_BACKEND_BUCKET }}" \
            -backend-config="prefix=server-mine-v2/terraform.tfstate"

      - name: Debug: Listar estado remoto
        run: |
          echo ">> Estado atual no GCS:"
          gsutil ls gs://${{ secrets.GCS_BACKEND_BUCKET }}/server-mine-v2/terraform.tfstate/

      - name: Remove stale Terraform lock
        run: |
          echo ">> Removendo lock padrão, se existir"
          gsutil rm -f gs://${{ secrets.GCS_BACKEND_BUCKET }}/server-mine-v2/terraform.tfstate/default.tflock || true

      - name: Terraform Fmt
        run: terraform -chdir=terraform fmt -check

      - name: Terraform Validate
        run: terraform -chdir=terraform validate

      - name: Terraform Plan
        run: |
          terraform -chdir=terraform plan -no-color -lock-timeout=300s \
            -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var="region=${{ secrets.GCP_REGION }}" \
            -var="zone=${{ secrets.GCP_ZONE }}" \
            -var="gcp_user_email=${{ secrets.GCP_USER_EMAIL }}" \
            -var="github_repo=${{ secrets.REMOTE_REPO }}" \
            -var="velocity_secret=${{ secrets.VELOCITY_SECRET }}" \
            -var="github_service_account_email=${{ secrets.GCP_SERVICE_ACCOUNT }}" \
            -var="github_workload_identity_provider=${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
